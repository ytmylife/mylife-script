#!/bin/bash
clear
64bytedal() {
    echo -e "\n$@\n" && exit 1
}
[[ "$(whoami)" != "root" ]] && {
echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mUse root!\033[0m"
rm $HOME/file > /dev/null 2>&1; exit 0
}
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r'| sed -e 's/[^a-z.]//ig'| rev); _Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×'|sed -e 's/[^a-z/]//ig'); _1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×'|sed -e 's/[^a-z/]//ig')
cd $HOME
fun_bar () {
comando[0]="$1"
comando[1]="$2"
(
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
) > /dev/null 2>&1 &
tput civis
echo -ne "          Downloading"
while true; do
for((i=0; i<18; i++)); do
echo -ne ""
sleep 0.1s
done
[[ -e $HOME/fim ]] && rm $HOME/fim && break
echo -e ""
sleep 1s
tput cuu1
tput dl1
echo -ne "          Downloading"
done
echo -e ""
tput cnorm
}
author=ytmylife
function verif_key () {
krm=$(echo '5:q-3gs2.o7%8:1'|rev); chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
echo -e ""
rm -rf $HOME/file > /dev/null 2>&1
sleep 2
clear; exit 1
}
}

is_core=v2ray
is_core_name=V2Ray
is_core_dir=/etc/$is_core
is_core_bin=$is_core_dir/bin/$is_core
is_core_repo=v2fly/$is_core-core
is_conf_dir=$is_core_dir/conf
is_log_dir=/var/log/$is_core
is_sh_bin=/usr/local/bin/$is_core
is_sh_dir=$is_core_dir/sh
is_sh_repo=$author/$is_core
is_pkg="wget unzip"
is_config_json=$is_core_dir/config.json
tmp_var_lists=(
    tmpcore
    tmpsh
    tmpjq
    is_core_ok
    is_sh_ok
    is_jq_ok
    is_pkg_ok
)

echo -e ""
echo ""
echo ""
echo ""
echo ""
echo -e "       Welcome to MyLife Script"
echo ""
echo ""
echo " - This script only work 64 bytes system"
echo " - Supports Linux models: Ubuntu (20, 22) | Debian(9, 10)"
echo ""
echo " - What's new?"
echo " - Added v2ray"
echo " - Fix some problems"
echo " - Changed interface"
echo ""
echo ""
#-----------------------------------------------------------------------------------------------------------------
echo -ne "> Do u wanna install? [Y/N]: "; read -r answer

# Exit if the user does not input 'y' or 'Y'
if [[ "$answer" != "y" && "$answer" != "Y" ]]; then
    echo "Installation canceled."
    exit 0
fi

# User input: username and password
read -rp "Please enter your username: " username
read -srp "Please enter your password: " password
echo ""

echo ""
echo "Saving user credentials..."
mkdir -p /opt/$author
mkdir -p /var/www/html
mkdir -p /var/www/html/templates
wget -r -np -nH --cut-dirs=5 -P /var/www/html/templates https://raw.githubusercontent.com/$author/mylife-script/main/mylife/templates/
cat <<EOF > /opt/$author/config.txt
username=$username
password=$password
EOF

sed -i 's/Port 22222/Port 22/g' /etc/ssh/sshd_config  > /dev/null 2>&1
service ssh restart  > /dev/null 2>&1
rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/$author/mylife-script/main/Install/list > /dev/null 2>&1; verif_key
sleep 3s
echo "/bin/menu" > /bin/h && chmod +x /bin/h > /dev/null 2>&1
echo "/bin/mylife" > /bin/h && chmod +x /bin/h > /dev/null 2>&1
rm versao* > /dev/null 2>&1
wget https://raw.githubusercontent.com/$author/mylife-script/main/Install/versao > /dev/null 2>&1
> /dev/null 2>&1
wget https://iplogger.org/2lHZ43 > /dev/null 2>&1
> /dev/null 2>&1
rm 2lHZ43 > /dev/null 2>&1
#-----------------------------------------------------------------------------------------------------------------
echo ""
echo ""
echo "              Checking ur system"
echo "                Please wait.."
echo ""
echo ""
case $(uname -m) in
amd64 | x86_64)
    is_jq_arch=amd64
    is_core_arch="64"
    ;;
*aarch64* | *armv8*)
    is_jq_arch=arm64
    is_core_arch="arm64-v8a"
    ;;
*)
    64bytedal "This vps is not 64 bytes or not supported!"
    ;;
esac
#mev2
clear
echo ""
echo ""
mkdir -p $is_core/zipdanny
mkdir -p $is_core_dir/sh #script
mkdir -p $is_core_dir/bin #beyleki zatlar
mkdir -p $is_core_dir/conf #kodlar
wget -r -np -nH -P $is_core/zipdanny https://github.com/${is_core_repo}/releases/latest/download/v2ray-linux-${is_core_arch}.zip
wget -r -np -nH -P $is_core/zipdanny https://github.com/jqlang/jq/releases/download/jq-1.7.1/jq-linux-${is_jq_arch}
#-----------------------------------------------------------------------------------------------------------------
sleep 1s
echo ""
[[ -f "$HOME/usuarios.db" ]] && {
clear
echo -e ""
echo ""
echo -e "                 Attention!"
echo ""
echo -e ""
echo -e " - Something going wrong about $is_core!!!"
echo ""
echo -e " - What do u wanna do? go away or reinstall"
echo -e " - 1. Go away"
echo -e " - 2. Reinstall"
echo ""
echo -e " - If choose go away, something or anything does not work for $is_core!"
echo ""
echo ""
tput setaf 2 ; tput bold ; read -p "Option ?: " -e -i 1 optiondb ; tput sgr0
} || {
awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
}
[[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
clear
echo ""
echo ""
echo -e ""
echo ""
echo -e ""
echo ""
fun_attlist () {
apt-get update -y
[[ ! -d /usr/share/.file ]] && mkdir /usr/share/.file
echo "crz: $(date)" > /usr/share/.file/.file
}
fun_bar 'fun_attlist'
clear
echo ""
echo -e ""
echo ""
echo -e ""
echo ""
inst_pct () {
_pacotes=("apache2" "bc" "cron" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip")
for _prog in ${_pacotes[@]}; do
apt install $_prog -y
done
wget -O /var/www/html/app.py https://raw.githubusercontent.com/$author/mylife-script/main/mylife/app.py
pip install speedtest-cli
pip install Flask
}
fun_bar 'inst_pct'
[[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp ; ufw allow 80/tcp ; ufw allow 3128/tcp ; ufw allow 8799/tcp ; ufw allow 8080/tcp
rm /var/www/html/index.html
clear
echo ""
echo -e ""
echo ""
echo -e ""
echo ""
fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
clear
echo ""
cd $HOME
IP=$(wget -qO- ipv4.icanhazip.com)
echo -e ""
echo -e ""
echo -e ""
echo -e ""
echo -e ""
echo -e ""
echo -e "            Use 'bash mylife' for terminal or"
echo -e "            Use $IP:80 for panel"
echo -e "            Telegram: @ytmylife"
echo -e ""
echo -e ""
echo -e ""
echo -e ""
echo -e ""
rm $HOME/file && cat /dev/null > ~/.bash_history && history -c
